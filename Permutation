def getPermutations(array):
    permutations = []
	permutationHelper(array, [], permutations)
	return permutations

def permutationHelper(array, currentPermutation, permutations):
	if not len(array) and len(currentPermutation):
		permutations.append(currentPermutation)
	else:
		for i in range(len(array)):
			newArray = array[:i] + array[i+1:]
			newPermutation = currentPermutation + [array[i]]
			permutationHelper(newArray, newPermutation, permutations)











def getPermutations(array):
    permutations = []
	permutationHelper(0, array, permutations)
	return permutations
def permutationHelper(i, array, permutations):
	if i == len(array) - 1:
		permutations.append(array[:])
	else:
		for j in range(i, len(array)):
			swap(array, i ,j)
			permutationHelper(i+1, array, permutations)
			swap(array, i ,j)
def swap(array , i, j):
	array[i], array[j] = array[j], array[i]
